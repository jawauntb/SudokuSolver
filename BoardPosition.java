
//@author Jawaun Brown
// ===================================================================
public class BoardPosition {
    // ===================================================================
    
    
    
    // ===============================================================
    private int _x;
    private int _y;
    private int[][] _board;
    // ===============================================================
    
    
    
    // ===============================================================
    public BoardPosition (int[][] board) {
        
        _board = board;
        findFirstEmpty();
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    public int get () {
        
        return _board[_x][_y];
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    public void set (int v) {
        
        _board[_x][_y] = v;
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    public boolean onBoard () {
        
        return (_x < 9);
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    public boolean isLegal () {
        
        int v = get();
        for (int i = 0; i < 9; i += 1) {
            
            if (((i != _y) && (_board[_x][i] == v)) ||
                ((i != _x) && (_board[i][_y] == v))) {
                
                return false;
                
            }
            
        }
        
        int i = (_x / 3) * 3;
        int j = (_y / 3) * 3;
        for (int di = 0; di < 3; di += 1) {
            for (int dj = 0; dj < 3; dj += 1) {
                
                if ((i + di != _x) && (j + dj != _y) &&
                    (_board[_x][_y] == _board[i + di][j + dj])) {
                    
                    return false;
                    
                }
                
            }
        }
        
        return true;
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    private void findFirstEmpty () {
        
        _x = 0;
        _y = 0;
        while ((_x < 9) && (_board[_x][_y] != 0)) {
            
            _y += 1;
            if (_y == 9) {
                _x += 1;
                _y = 0;
            }
            
        }
        
    }
    // ===============================================================
    
    
    
    // ===============================================================
    public String toString () {
        return String.format("(%d, %d) = %d", _x, _y, get());
    }
    // ===============================================================
    
    
    
    // ===================================================================
} // BoardPosition
// ===================================================================
